import{Z as $,d as I,h as m,c as j,k as t,a as u,t as B,H as M,l as V,Q as R,o as H}from"./chunks/framework.71faaeaf.js";var L=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function A(s){return s&&s.__esModule&&Object.prototype.hasOwnProperty.call(s,"default")?s.default:s}function W(s){if(s.__esModule)return s;var y=s.default;if(typeof y=="function"){var c=function o(){return this instanceof o?Reflect.construct(y,arguments,this.constructor):y.apply(this,arguments)};c.prototype=y.prototype}else c={};return Object.defineProperty(c,"__esModule",{value:!0}),Object.keys(s).forEach(function(o){var g=Object.getOwnPropertyDescriptor(s,o);Object.defineProperty(c,o,g.get?g:{enumerable:!0,get:function(){return s[o]}})}),c}var D={exports:{}};const z=W($);(function(s,y){(function(c,o){o(y,z)})(L,function(c,o){const g=["element-num","id","onUpdate:modelValue","type","disabled","readonly","onKeyup","onPaste","onFocus"],T=o.defineComponent({__name:"HOtpInput",props:{length:{type:Number,required:!0,default:6},defaultColor:{type:String,default:"#eeeeee"},mainColor:{type:String,default:"#00dc82",required:!1},fontColor:{type:String,default:"black",required:!1},allowPaste:{type:Boolean,default:!0,required:!1},onlyNumber:{type:Boolean,default:!1},isRefresh:{type:Boolean,default:!1},type:{type:String,default:"password",validator:i=>["password","text"].includes(i)},autoFocus:{type:Boolean,default:!0},disabled:{type:Boolean,default:!1},outlined:{type:Boolean,default:!1},readonly:{type:Boolean,default:!1},wrapperClassName:{type:String,default:""},inputClassName:{type:String,default:""}},emits:["onFinish","onChange"],setup(i,{expose:k,emit:C}){const l=i;o.watch(()=>l.isRefresh,()=>{a.value=[],d[0].focus(),p.value=-1});const d={},a=o.ref([]),p=o.ref(-1);k({clear:()=>{a.value=[],d[0].focus(),p.value=-1}});const _=e=>{if(!l.onlyNumber)return;const n=e.charCode||e.keyCode||0;n===8||n===46||n===86||n===91||n>=48&&n<=57||n>=96&&n<=105||e.preventDefault()},w=(e,n)=>{d[e]=n},N=e=>`hl-${e+1}`,O=e=>`3px solid ${a.value[e]?l.mainColor:l.defaultColor}`,S=e=>{a.value[e]&&a.value[e]!==""&&e<l.length?(p.value=e+1,d[e+1]&&d[e+1].focus()):e>0&&(!a.value[e]||a.value[e]==="")&&d[e-1]&&(d[e-1].focus(),p.value=e-1)},v=e=>{d[e].select()},r=e=>{var n;if(l.allowPaste){const P=((n=e==null?void 0:e.clipboardData)==null?void 0:n.getData("text/plain"))||"",h=P.split("");let f=!0;if(l.onlyNumber&&(f=new RegExp(`^\\d{${l.length}}$`).test(P)),f){for(let x=0;x<l.length;x++)b(x,h[x]);d[l.length-1].focus(),F()}}},b=(e,n)=>{a.value[e]=n},F=()=>{const e=a.value.join("");C("onChange",e),e.length===l.length&&(C("onFinish",e),p.value=-1)};o.onMounted(()=>{l.autoFocus&&d&&d[0].focus()});const q=e=>l.outlined?{outline:E(p.value===e),borderBottom:"none",borderRadius:"2px"}:{borderBottom:O(e)},E=e=>{const n=e?l.mainColor:l.defaultColor;return l.outlined?`2px solid ${n}`:"none"};return(e,n)=>(o.openBlock(),o.createElementBlock("div",{class:o.normalizeClass(["hl-input-container m-auto text-center",i.wrapperClassName])},[(o.openBlock(!0),o.createElementBlock(o.Fragment,null,o.renderList(i.length,(P,h)=>o.withDirectives((o.openBlock(),o.createElementBlock("input",{"element-num":P,id:N(h),ref_for:!0,ref:f=>w(h,f),key:h,"onUpdate:modelValue":f=>a.value[h]=f,type:i.type,maxlength:"1",style:o.normalizeStyle({borderBottom:O(h),color:i.fontColor,...q(h)}),class:o.normalizeClass(i.inputClassName),disabled:i.disabled,readonly:i.readonly,contenteditable:"true",onKeydown:n[0]||(n[0]=f=>_(f)),onKeyup:f=>S(h),onPaste:o.withModifiers(r,["prevent"]),onInput:n[1]||(n[1]=f=>F()),onFocus:f=>v(h)},null,46,g)),[[o.vModelDynamic,a.value[h]]])),128))],2))}});c.HOtpInput=T,Object.defineProperty(c,Symbol.toStringTag,{value:"Module"})})})(D,D.exports);var K=D.exports;const U=A(K),G=R('<h1 id="props-and-demo-examples" tabindex="-1">Props and Demo Examples <a class="header-anchor" href="#props-and-demo-examples" aria-label="Permalink to &quot;Props and Demo Examples&quot;">​</a></h1><p>This page demonstrates usage of props and events provided by HOtpInput.</p><h2 id="props-events" tabindex="-1">Props &amp; Events <a class="header-anchor" href="#props-events" aria-label="Permalink to &quot;Props &amp; Events&quot;">​</a></h2><table><thead><tr><th>Name</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td>length</td><td><code>Number</code></td><td><code>6</code></td><td>Number of OTP inputs to be rendered.</td></tr><tr><td>defaultColor</td><td><code>String</code></td><td><code>#eeeeee</code></td><td>Default outline and border color of each OTP input</td></tr><tr><td>mainColor</td><td><code>String</code></td><td><code>#00dc82</code></td><td>Main color for outlined and border when input is focused.</td></tr><tr><td>fontColor</td><td><code>String</code></td><td><code>black</code></td><td>Color for input text.</td></tr><tr><td>allowPaste</td><td><code>Boolean</code></td><td><code>true</code></td><td>If true, this will allow you paste content from clipboard to OTP input.</td></tr><tr><td>onlyNumber</td><td><code>Boolean</code></td><td><code>true</code></td><td>If true, you can only input number to OPT input.</td></tr><tr><td>type</td><td><code>String</code></td><td><code>&quot;password&quot;, &quot;text&quot;</code></td><td>Specific type of OTP input.</td></tr><tr><td>autoFocus</td><td><code>Boolean</code></td><td><code>true</code></td><td>Whether or not to auto focus on first element on mount.</td></tr><tr><td>disabled</td><td><code>Boolean</code></td><td><code>false</code></td><td>Whether or not to disable the input.</td></tr><tr><td>outlined</td><td><code>Boolean</code></td><td><code>false</code></td><td>Whether or not to switch to outlined input.</td></tr><tr><td>readonly</td><td><code>Boolean</code></td><td><code>false</code></td><td>Whether or not to switch to readonly input.</td></tr><tr><td>wrapperClassName</td><td><code>String</code></td><td><code>null</code></td><td>The class name to use for the wrapper element.</td></tr><tr><td>inputClassName</td><td><code>String</code></td><td><code>null</code></td><td>The class name to use for each input element.</td></tr><tr><td>onChange</td><td><code>Function</code></td><td><code>null</code></td><td>Callback event that return OTP code when we made a change in inputs. <code>(otpCode: string)</code></td></tr><tr><td>onFinish</td><td><code>Function</code></td><td><code>null</code></td><td>Callback event that return OTP code when we fully typed all inputs. <code>(otpCode: string)</code></td></tr></tbody></table><p>See the <a href="https://www.npmjs.com/package/@healerlab/vue3-simple-otp-input" target="_blank" rel="noreferrer">Vue3 Simple OTP Input</a> package for more information.</p><h2 id="demo-examples" tabindex="-1">Demo Examples <a class="header-anchor" href="#demo-examples" aria-label="Permalink to &quot;Demo Examples&quot;">​</a></h2><p>Here we display a list of settings that could be applied within an application.</p>',7),J=t("br",null,null,-1),Q=["checked"],Z=["checked"],X=t("br",null,null,-1),Y=["checked"],ee=["checked"],te=t("br",null,null,-1),oe=["checked"],ne=["checked"],le=t("br",null,null,-1),de=t("br",null,null,-1),ae=t("span",null," or ",-1),re=t("br",null,null,-1),ce=JSON.parse('{"title":"Props and Demo Examples","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"api.md","filePath":"api.md","lastUpdated":1693830843000}'),ue={name:"api.md"},ie=I({...ue,setup(s){const{HOtpInput:y}=U,c=m(null),o=m(),g=m(),T=v=>{o.value=v},i=v=>{g.value=v,v||(o.value="")},k=m(!0),C=m(!0),l=m(!0),d=m(!1),a=m(!1),p=m(!1),_=m(6),w=m("text"),N=()=>{c.value.clear(),l.value=!l.value},O=v=>{_.value=v?6:4},S=()=>{w.value=w.value==="password"?"text":"password"};return(v,r)=>(H(),j("div",null,[G,t("p",null,[t("label",null,[u("Current OTP Length is: "),t("code",null,B(_.value),1)]),u(),J,t("label",null,[t("input",{type:"checkbox",checked:k.value,onChange:r[0]||(r[0]=b=>k.value=!k.value)},null,40,Q),u(" Outlined")]),t("label",null,[t("input",{type:"checkbox",checked:C.value,onChange:r[1]||(r[1]=b=>C.value=!C.value)},null,40,Z),u(" AutoFocus")]),u(),X,t("label",null,[t("input",{type:"checkbox",checked:l.value,onChange:N},null,40,Y),u(" OnlyNumber")]),t("label",null,[t("input",{type:"checkbox",checked:d.value,onChange:r[2]||(r[2]=b=>d.value=!d.value)},null,40,ee),u(" Disabled")]),u(),te,t("label",null,[t("input",{type:"checkbox",checked:a.value,onChange:r[3]||(r[3]=b=>a.value=!a.value)},null,40,oe),u(" Readonly")]),t("label",null,[t("input",{type:"checkbox",checked:p.value,onChange:r[4]||(r[4]=b=>p.value=!p.value)},null,40,ne),u(" AllowPaste")]),u(),le,t("label",null,[t("input",{type:"checkbox",onChange:S},null,32),u(" OTP type: "),t("code",null,B(w.value),1)]),u(),de]),t("p",null,[t("a",{onClick:r[5]||(r[5]=b=>O(!1)),href:"javascript:void(0)"},"Change OTP Length to 4"),ae,t("a",{onClick:r[6]||(r[6]=b=>O(!0)),href:"javascript:void(0)"},"Change OTP Length to 6")]),M(V(y),{fontColor:"#00dc82",length:_.value,type:w.value,onOnFinish:T,onOnChange:i,wrapperClassName:"otp-input",outlined:k.value,ref_key:"otpInput",ref:c,"only-number":l.value,autoFocus:C.value,disabled:d.value,readonly:a.value,allowPaste:p.value},null,8,["length","type","outlined","only-number","autoFocus","disabled","readonly","allowPaste"]),t("p",null,[t("span",null,[u("The final OTP code is: "),t("code",null,B(o.value),1)]),re,t("span",null,[u("The OTP changed to: "),t("code",null,B(g.value),1)])])]))}});export{ce as __pageData,ie as default};
